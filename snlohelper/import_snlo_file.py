# MIT License

# Copyright (c) 2024 Benedikt Burger

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import re

import numpy as np


def import_snlo_file(file_name: str, file_path: str = "C:/SNLO/"):
    """import a file generated by SNLO, specified by filename and return array (no header)"""
    with open(file_path + file_name, "r") as f:
        input = f.readlines()
    data = []
    e_numbers = re.compile(r"-*[\d.]*?E-*[+]*\d*")
    r""" Regex
        -*        "-" or nothing
        [\d.]*?   decimal number (0 or more characters)
        -*        "-" or nothing
        [+]*      "+" or nothing
        \d*       decimal number (0 or more characters)
    """
    for i in input:
        temp = []
        # old implementation, suffers from strings without whitespace, e.g.:
        #    '9.206897E-100-1.616264E-2'
        #    element = i.split()
        #    for item in element:
        #        temp.append(float(item))
        new_element = e_numbers.findall(i)
        for item in new_element:
            temp.append(float(item))
        data.append(temp)
    return np.array(data.copy())
